//Cg

void vshader(half4 vtx_position : POSITION,
             out half4 l_position : POSITION,
             out half2 l_texcoord : TEXCOORD0,
             uniform half4 texpad_color,
             uniform half4x4 mat_modelproj)
{
    l_position = mul(mat_modelproj, vtx_position);
    l_texcoord = (vtx_position.xz * texpad_color.xy) + texpad_color.xy;
}

#define OPACITY 1


void fshader(half2 l_texcoord : TEXCOORD0,
             uniform sampler2D k_color : TEXUNIT0,
             uniform sampler2D k_line : TEXUNIT1,
             uniform half4 texpix_color,
             uniform half4 texpad_color,
             out half4 o_color : COLOR)
{
    half blurSize = 1.0/512.0;

    half4 sum = vec4(0.0);

    // blur in y (vertical)
    // take nine samples, with the distance blurSize between them
    sum += tex2D(k_color, vec2(l_texcoord.x - 4.0*blurSize, l_texcoord.y)) * 0.05;
    sum += tex2D(k_color, vec2(l_texcoord.x - 3.0*blurSize, l_texcoord.y)) * 0.09;
    sum += tex2D(k_color, vec2(l_texcoord.x - 2.0*blurSize, l_texcoord.y)) * 0.12;
    sum += tex2D(k_color, vec2(l_texcoord.x - blurSize, l_texcoord.y)) * 0.15;
    sum += tex2D(k_color, vec2(l_texcoord.x, l_texcoord.y)) * 0.16;
    sum += tex2D(k_color, vec2(l_texcoord.x + blurSize, l_texcoord.y)) * 0.15;
    sum += tex2D(k_color, vec2(l_texcoord.x + 2.0*blurSize, l_texcoord.y)) * 0.12;
    sum += tex2D(k_color, vec2(l_texcoord.x + 3.0*blurSize, l_texcoord.y)) * 0.09;
    sum += tex2D(k_color, vec2(l_texcoord.x + 4.0*blurSize, l_texcoord.y)) * 0.05;

    o_color = sum;

}
